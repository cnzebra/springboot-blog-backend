<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sonnx.blog.dao.ArticleDao">
    <resultMap id="BaseResultMap" type="com.sonnx.blog.modal.entity.ArticleDO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="cover" jdbcType="VARCHAR" property="cover"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="author_id" jdbcType="BIGINT" property="authorId"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="tags" jdbcType="VARCHAR" property="tags"/>
        <result column="categories" jdbcType="VARCHAR" property="categories"/>
        <result column="hits" jdbcType="INTEGER" property="hits"/>
        <result column="comments_num" jdbcType="INTEGER" property="commentsNum"/>
        <result column="allow_comment" jdbcType="BIT" property="allowComment"/>
        <result column="allow_ping" jdbcType="BIT" property="allowPing"/>
        <result column="allow_feed" jdbcType="BIT" property="allowFeed"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sonnx.blog.modal.entity.ArticleDO">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, title, cover,path, author_id, type, status, tags, categories, hits,
        comments_num, allow_comment, allow_ping, allow_feed,gmt_create,gmt_modified
    </sql>
    <sql id="Blob_Column_List">
        content
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.sonnx.blog.modal.entity.ArticleDOExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_b_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.sonnx.blog.modal.entity.ArticleDOExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_b_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_b_article
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from t_b_article
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.sonnx.blog.modal.entity.ArticleDOExample">
        delete from t_b_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.sonnx.blog.modal.entity.ArticleDO" useGeneratedKeys="true" keyProperty="id">
        insert into t_b_article (id, title,cover, path,author_id,
        type, status, tags,
        categories, hits, comments_num,
        allow_comment, allow_ping, allow_feed,
        content,gmt_create,gmt_modified)
        values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{cover},#{path,jdbcType=VARCHAR},#{authorId,jdbcType=BIGINT},
        #{type,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR},
        #{categories,jdbcType=VARCHAR}, #{hits,jdbcType=INTEGER}, #{commentsNum,jdbcType=INTEGER},
        #{allowComment,jdbcType=BIT}, #{allowPing,jdbcType=BIT}, #{allowFeed,jdbcType=BIT},
        #{content,jdbcType=LONGVARCHAR},#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.sonnx.blog.modal.entity.ArticleDO" useGeneratedKeys="true"
            keyProperty="id">
        insert into t_b_article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="path != null">
                path,
            </if>
            <if test="authorId != null">
                author_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="tags != null">
                tags,
            </if>
            <if test="categories != null">
                categories,
            </if>
            <if test="hits != null">
                hits,
            </if>
            <if test="commentsNum != null">
                comments_num,
            </if>
            <if test="allowComment != null">
                allow_comment,
            </if>
            <if test="allowPing != null">
                allow_ping,
            </if>
            <if test="allowFeed != null">
                allow_feed,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="path != null">
                #{path,jdbcType=VARCHAR},
            </if>
            <if test="authorId != null">
                #{authorId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="tags != null">
                #{tags,jdbcType=VARCHAR},
            </if>
            <if test="categories != null">
                #{categories,jdbcType=VARCHAR},
            </if>
            <if test="hits != null">
                #{hits,jdbcType=INTEGER},
            </if>
            <if test="commentsNum != null">
                #{commentsNum,jdbcType=INTEGER},
            </if>
            <if test="allowComment != null">
                #{allowComment,jdbcType=BIT},
            </if>
            <if test="allowPing != null">
                #{allowPing,jdbcType=BIT},
            </if>
            <if test="allowFeed != null">
                #{allowFeed,jdbcType=BIT},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.sonnx.blog.modal.entity.ArticleDOExample"
            resultType="java.lang.Integer">
        select count(*) from t_b_article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_b_article
        <set>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.path != null">
                path = #{record.path,jdbcType=VARCHAR},
            </if>
            <if test="record.authorId != null">
                author_id = #{record.authorId,jdbcType=BIGINT},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.tags != null">
                tags = #{record.tags,jdbcType=VARCHAR},
            </if>
            <if test="record.categories != null">
                categories = #{record.categories,jdbcType=VARCHAR},
            </if>
            <if test="record.hits != null">
                hits = #{record.hits,jdbcType=INTEGER},
            </if>
            <if test="record.commentsNum != null">
                comments_num = #{record.commentsNum,jdbcType=INTEGER},
            </if>
            <if test="record.allowComment != null">
                allow_comment = #{record.allowComment,jdbcType=BIT},
            </if>
            <if test="record.allowPing != null">
                allow_ping = #{record.allowPing,jdbcType=BIT},
            </if>
            <if test="record.allowFeed != null">
                allow_feed = #{record.allowFeed,jdbcType=BIT},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.gmtModified != null">
                gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update t_b_article
        set
        title = #{record.title,jdbcType=VARCHAR},
        slug = #{record.slug,jdbcType=VARCHAR},
        author_id = #{record.authorId,jdbcType=BIGINT},
        type = #{record.type,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=VARCHAR},
        tags = #{record.tags,jdbcType=VARCHAR},
        categories = #{record.categories,jdbcType=VARCHAR},
        hits = #{record.hits,jdbcType=INTEGER},
        comments_num = #{record.commentsNum,jdbcType=INTEGER},
        allow_comment = #{record.allowComment,jdbcType=BIT},
        allow_ping = #{record.allowPing,jdbcType=BIT},
        allow_feed = #{record.allowFeed,jdbcType=BIT},
        content = #{record.content,jdbcType=LONGVARCHAR},
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_b_article
        set
        title = #{record.title,jdbcType=VARCHAR},
        path = #{record.path,jdbcType=VARCHAR},
        author_id = #{record.authorId,jdbcType=BIGINT},
        type = #{record.type,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=VARCHAR},
        tags = #{record.tags,jdbcType=VARCHAR},
        categories = #{record.categories,jdbcType=VARCHAR},
        hits = #{record.hits,jdbcType=INTEGER},
        comments_num = #{record.commentsNum,jdbcType=INTEGER},
        allow_comment = #{record.allowComment,jdbcType=BIT},
        allow_ping = #{record.allowPing,jdbcType=BIT},
        allow_feed = #{record.allowFeed,jdbcType=BIT},
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.sonnx.blog.modal.entity.ArticleDO">
        update t_b_article
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="cover !=null">
                cover=#{cover,jdbcType=VARCHAR},
            </if>
            <if test="path != null">
                path = #{path,jdbcType=VARCHAR},
            </if>
            <if test="authorId != null">
                author_id = #{authorId,jdbcType=BIGINT},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="tags != null">
                tags = #{tags,jdbcType=VARCHAR},
            </if>
            <if test="categories != null">
                categories = #{categories,jdbcType=VARCHAR},
            </if>
            <if test="hits != null">
                hits = #{hits,jdbcType=INTEGER},
            </if>
            <if test="commentsNum != null">
                comments_num = #{commentsNum,jdbcType=INTEGER},
            </if>
            <if test="allowComment != null">
                allow_comment = #{allowComment,jdbcType=BIT},
            </if>
            <if test="allowPing != null">
                allow_ping = #{allowPing,jdbcType=BIT},
            </if>
            <if test="allowFeed != null">
                allow_feed = #{allowFeed,jdbcType=BIT},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sonnx.blog.modal.entity.ArticleDO">
        update t_b_article
        set title = #{title,jdbcType=VARCHAR},
        path = #{path,jdbcType=VARCHAR},
        author_id = #{authorId,jdbcType=BIGINT},
        type = #{type,jdbcType=VARCHAR},
        status = #{status,jdbcType=VARCHAR},
        tags = #{tags,jdbcType=VARCHAR},
        categories = #{categories,jdbcType=VARCHAR},
        hits = #{hits,jdbcType=INTEGER},
        comments_num = #{commentsNum,jdbcType=INTEGER},
        allow_comment = #{allowComment,jdbcType=BIT},
        allow_ping = #{allowPing,jdbcType=BIT},
        allow_feed = #{allowFeed,jdbcType=BIT},
        content = #{content,jdbcType=LONGVARCHAR},
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sonnx.blog.modal.entity.ArticleDO">
        update t_b_article
        set title = #{title,jdbcType=VARCHAR},
        path = #{path,jdbcType=VARCHAR},
        author_id = #{authorId,jdbcType=BIGINT},
        type = #{type,jdbcType=VARCHAR},
        status = #{status,jdbcType=VARCHAR},
        tags = #{tags,jdbcType=VARCHAR},
        categories = #{categories,jdbcType=VARCHAR},
        hits = #{hits,jdbcType=INTEGER},
        comments_num = #{commentsNum,jdbcType=INTEGER},
        allow_comment = #{allowComment,jdbcType=BIT},
        allow_ping = #{allowPing,jdbcType=BIT},
        allow_feed = #{allowFeed,jdbcType=BIT},
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="audit">
        update t_b_article a
        <set>
            a.status=#{status},
            a.gmt_modified=#{modified}
        </set>
        where a.id=#{articleId}
    </update>


    <resultMap id="archiveBoMap" type="com.sonnx.blog.modal.bo.ArchiveBo">
        <id column="date" property="date"/>
        <result column="year" property="year"/>
        <result column="month" property="month"/>
        <result column="count" property="count"/>
    </resultMap>

    <select id="findReturnArchiveBo" resultMap="archiveBoMap" parameterType="string">
        select
        DATE_FORMAT(gmt_create,'%Y') as year,
        DATE_FORMAT(gmt_create,'%m') as month,
        DATE_FORMAT(gmt_create,'%Y年%m月') as date,
        count(*) as count
        from
        t_b_article
        where
        type = 'post' and status = 'publish'
        <if test="arg0!=null and arg1!=null">
            and from_unixtime(gmt_create,'%Y')=#{arg0} and from_unixtime(gmt_create,'%m')=#{arg1}
        </if>
        group by date
        order by date desc
    </select>


    <select id="findByCatalog" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select a.*
        from t_b_article a left join t_b_article_meta b on a.id = b.article_id
        where b.meta_id = #{metaId} and a.status = 'publish' and a.type = 'post'
        order by a.gmt_create desc
    </select>
</mapper>