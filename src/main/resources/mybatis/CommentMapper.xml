<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sonnx.blog.dao.CommentDao">
    <resultMap id="BaseResultMap" type="com.sonnx.blog.modal.entity.CommentDO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="article_id" jdbcType="BIGINT" property="articleId"/>
        <result column="owner_id" jdbcType="BIGINT" property="ownerId"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="site_url" jdbcType="VARCHAR" property="siteUrl"/>
        <result column="ip" jdbcType="VARCHAR" property="ip"/>
        <result column="agent" jdbcType="VARCHAR" property="agent"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="parent" jdbcType="BIGINT" property="parent"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified"/>

        <association property="author" javaType="com.sonnx.blog.modal.entity.UserDO">
            <id property="id" column="b_author_id"/>
            <result property="loginName" column="b_login_name"/>
            <result property="email" column="b_email"/>
            <result property="screenName" column="b_screen_name"/>
            <result property="lastLoginTime" column="b_last_login_time"/>
        </association>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sonnx.blog.modal.entity.CommentDO">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and a.${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and a.${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and a.${criterion.condition} #{criterion.value} and a.#{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and a.${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and a.${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and a.${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and a.${criterion.condition} #{criterion.value} and a.#{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and a.${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        a.id, a.article_id, a.owner_id, a.email, a.site_url, a.ip, a.agent, a.type, a.status,
        a.parent,a.gmt_create,a.gmt_modified,
        b.id b_author_id,
        b.login_name b_login_name,
        b.email b_email,
        b.screen_name b_screen_name,
        b.last_login_time b_last_login_time
    </sql>
    <sql id="Blob_Column_List">
        a.content
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.sonnx.blog.modal.entity.CommentDOExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_b_comment a join t_si_user b on a.author_id=b.id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by a.${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.sonnx.blog.modal.entity.CommentDOExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_b_comment a join t_si_user b on a.author_id=b.id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by a.${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_b_comment a join t_si_user b on a.author_id=b.id
        where a.id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from t_b_comment
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.sonnx.blog.modal.entity.CommentDOExample">
        delete from t_b_comment a
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.sonnx.blog.modal.entity.CommentDO" useGeneratedKeys="true" keyProperty="id">
        insert into t_b_comment (id, article_id,
        author_id, owner_id,
        email, site_url, ip, agent,
        type, status, parent,
        content,gmt_create,gmt_modified)
        values (#{id,jdbcType=BIGINT}, #{articleId,jdbcType=BIGINT},
        #{author.id,jdbcType=BIGINT}, #{ownerId,jdbcType=BIGINT},
        #{email,jdbcType=VARCHAR}, #{siteUrl,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{agent,jdbcType=VARCHAR},
        #{type,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{parent,jdbcType=BIGINT},
        #{content,jdbcType=LONGVARCHAR},#{gmtCreate,jdbcType=TIMESTAMP},#{gmtModified,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.sonnx.blog.modal.entity.CommentDO" useGeneratedKeys="true"
            keyProperty="id">
        insert into t_b_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="articleId != null">
                article_id,
            </if>
            <if test="author != null">
                author_id,
            </if>
            <if test="ownerId != null">
                owner_id,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="siteUrl != null">
                site_url,
            </if>
            <if test="ip != null">
                ip,
            </if>
            <if test="agent != null">
                agent,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="parent != null">
                parent,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtModified != null">
                gmt_modified,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="articleId != null">
                #{articleId,jdbcType=BIGINT},
            </if>
            <if test="author != null">
                #{author.id,jdbcType=BIGINT},
            </if>
            <if test="ownerId != null">
                #{ownerId,jdbcType=BIGINT},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="siteUrl != null">
                #{siteUrl,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="agent != null">
                #{agent,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="parent != null">
                #{parent,jdbcType=BIGINT},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=TIMESTAMP},
            </if>
            <if test="gmtModified != null">
                #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.sonnx.blog.modal.entity.CommentDOExample"
            resultType="java.lang.Integer">
        select count(*) from t_b_comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_b_comment
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.articleId != null">
                article_id = #{record.articleId,jdbcType=BIGINT},
            </if>
            <if test="record.author != null">
                author_id = #{record.author.id,jdbcType=BIGINT},
            </if>
            <if test="record.ownerId != null">
                owner_id = #{record.ownerId,jdbcType=BIGINT},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.url != null">
                site_url = #{record.siteUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.ip != null">
                ip = #{record.ip,jdbcType=VARCHAR},
            </if>
            <if test="record.agent != null">
                agent = #{record.agent,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.parent != null">
                parent = #{record.parent,jdbcType=BIGINT},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.gmtModified != null">
                gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update t_b_comment
        set id = #{record.id,jdbcType=BIGINT},
        article_id = #{record.articleId,jdbcType=BIGINT},
        author_id = #{record.author.id,jdbcType=BIGINT},
        owner_id = #{record.ownerId,jdbcType=BIGINT},
        email = #{record.email,jdbcType=VARCHAR},
        site_url = #{record.siteUrl,jdbcType=VARCHAR},
        ip = #{record.ip,jdbcType=VARCHAR},
        agent = #{record.agent,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=VARCHAR},
        parent = #{record.parent,jdbcType=BIGINT},
        content = #{record.content,jdbcType=LONGVARCHAR},
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_b_comment
        set id = #{record.id,jdbcType=BIGINT},
        article_id = #{record.articleId,jdbcType=BIGINT},
        author_id = #{record.author.id,jdbcType=BIGINT},
        owner_id = #{record.ownerId,jdbcType=BIGINT},
        email = #{record.email,jdbcType=VARCHAR},
        site_url = #{record.siteUrl,jdbcType=VARCHAR},
        ip = #{record.ip,jdbcType=VARCHAR},
        agent = #{record.agent,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=VARCHAR},
        parent = #{record.parent,jdbcType=BIGINT},
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.sonnx.blog.modal.entity.CommentDO">
        update t_b_comment
        <set>
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="author != null">
                author_id = #{author.id,jdbcType=BIGINT},
            </if>
            <if test="ownerId != null">
                owner_id = #{ownerId,jdbcType=BIGINT},
            </if>
            <if test="mail != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                site_url = #{siteUrl,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="agent != null">
                agent = #{agent,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="parent != null">
                parent = #{parent,jdbcType=BIGINT},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="gmtModified != null">
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sonnx.blog.modal.entity.CommentDO">
        update t_b_comment
        set article_id = #{articleId,jdbcType=BIGINT},
        author_id = #{author.id,jdbcType=BIGINT},
        owner_id = #{ownerId,jdbcType=BIGINT},
        email = #{email,jdbcType=VARCHAR},
        site_url = #{siteUrl,jdbcType=VARCHAR},
        ip = #{ip,jdbcType=VARCHAR},
        agent = #{agent,jdbcType=VARCHAR},
        type = #{type,jdbcType=VARCHAR},
        status = #{status,jdbcType=VARCHAR},
        parent = #{parent,jdbcType=BIGINT},
        content = #{content,jdbcType=LONGVARCHAR},
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sonnx.blog.modal.entity.CommentDO">
        update t_b_comment
        set article_id = #{articleId,jdbcType=BIGINT},
        author_id = #{author.id,jdbcType=BIGINT},
        owner_id = #{ownerId,jdbcType=BIGINT},
        email = #{email,jdbcType=VARCHAR},
        site_url = #{siteUrl,jdbcType=VARCHAR},
        ip = #{ip,jdbcType=VARCHAR},
        agent = #{agent,jdbcType=VARCHAR},
        type = #{type,jdbcType=VARCHAR},
        status = #{status,jdbcType=VARCHAR},
        parent = #{parent,jdbcType=BIGINT},
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>